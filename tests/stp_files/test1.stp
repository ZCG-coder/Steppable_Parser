mat1 = [
1 3 4 5 8 9;
4 5 6 8 9 0;
4 2 2 1 2 1;
3 2 4 1 2 4;
3 2 4 1 2 4
]

mat2 = [
1*2^3 3 4 5 8 9 ;
4 5 6 8 9 0 ;
4 2 2 1 2 1 ;
3 2 4 1 2 4 ;
3 2 4 1 2 4 ;]

obj1 {
    mat = | 1 2 3 4 5 |
}

fn1 Mat m, Mat n -> Mat {
    m * (n + 3)
}

var1 = (3 mod (2+4) + 5) + 2
if type(var1) == "number" {
    "Great! \{var1\} is a number. \r \n"
} else {
    "Totally wrong!"
}

obj.mat = mat1;

a = sin(15)

foreach x in mat1 {
    x = x ^ 2
}

mat1 * mat2
mat1 .* mat2

# Operators
# Binary
# ^ & * / - + == != > < >= <= .* ./ .^
# Unary
# ! + -

sum(mat1)

mat1 = mat1 * mat2

import module
stat = module.learn()

stat

#comment

12% + 11% * (1+2)

x = symbol("x")
expr = x^2 == 4
vals = solve(expr)

"Unicode \xFE\xFF \033[1f;"
